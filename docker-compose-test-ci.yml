version: '3.5'

services:

    nginx:
      image: ${COMPOSE_PROJECT_NAME}-nginx:latest
      build:
        context: ./docker/
        args:
          BUILD_ARGUMENT_ENV: test
        dockerfile: ./nginx/Dockerfile
      container_name: ${COMPOSE_PROJECT_NAME}-nginx
      restart: always
      ports:
        - "${WEB_PORT_HTTP}:80"
        - "${WEB_PORT_SSL}:443"
      volumes:
        - ./:/var/www/html:ro,cached
      depends_on:
        - symfony
      networks:
        - symfony

    symfony:
      image: ${COMPOSE_PROJECT_NAME}-symfony:latest
      build:
        context: .
        args:
          BUILD_ARGUMENT_ENV: test
          HOST_UID: ${HOST_UID}
          HOST_GID: ${HOST_GID}
          XDEBUG_CONFIG: ${XDEBUG_CONFIG}
          XDEBUG_VERSION: ${XDEBUG_VERSION}
        dockerfile: ./Dockerfile
      container_name: ${COMPOSE_PROJECT_NAME}-symfony
      volumes:
        - ./.git:/var/www/html/.git:cached
        - ./reports:/var/www/html/reports:delegated
      depends_on:
        - mysql
      networks:
        - symfony

    mysql:
      image: mysql:${MYSQL_VERSION}
      platform: linux/x86_64
      container_name: ${COMPOSE_PROJECT_NAME}-mysql
      command: --innodb-use-native-aio=${INNODB_USE_NATIVE_AIO:-1} --sql_mode=${SQL_MODE:-"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"}
      environment:
          MYSQL_USER: instabot
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: instabot_test
      ports:
        - "3306:3306"
      volumes:
        - ./var/mysql-data:/var/lib/mysql:delegated
        - ./docker/test/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      networks:
        - symfony

networks:
  symfony:
    name: symfony
